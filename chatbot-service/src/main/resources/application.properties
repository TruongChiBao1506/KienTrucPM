# Server configuration
server.port=8089

# Spring application configuration
spring.application.name=chatbot-service
spring.data.mongodb.uri=mongodb+srv://chatbotAI:mE9hfnjvlDRYxmjc@cluster0.jntnzia.mongodb.net/chatbotdb?retryWrites=true&w=majority&appName=Cluster0

# Eureka configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.prefer-ip-address=true

# Gemini configuration
gemini.api-key=
gemini.model=gemini-2.0-flash
gemini.temperature=0.7
gemini.max-output-tokens=800

# Feign Client configuration
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.circuitbreaker.enabled=true

# Frontend configuration
frontend.base-url=http://localhost:8889

# Resilience4j Rate Limiter Configuration
# General configuration for all chatbot endpoints
resilience4j.ratelimiter.instances.chatEndpoint.limitForPeriod=15
resilience4j.ratelimiter.instances.chatEndpoint.limitRefreshPeriod=60s
resilience4j.ratelimiter.instances.chatEndpoint.timeoutDuration=0

# Lower limits for navigation check to prevent misuse
resilience4j.ratelimiter.instances.navigationEndpoint.limitForPeriod=20
resilience4j.ratelimiter.instances.navigationEndpoint.limitRefreshPeriod=60s
resilience4j.ratelimiter.instances.navigationEndpoint.timeoutDuration=0

# Higher limits for conversation management (doesn't use Gemini API)
resilience4j.ratelimiter.instances.conversationEndpoint.limitForPeriod=50
resilience4j.ratelimiter.instances.conversationEndpoint.limitRefreshPeriod=60s
resilience4j.ratelimiter.instances.conversationEndpoint.timeoutDuration=0

# Resilience4j Retry Configuration
# Retry configuration for Gemini API calls
resilience4j.retry.instances.geminiApiRetry.maxAttempts=3
resilience4j.retry.instances.geminiApiRetry.waitDuration=500ms
# @suppresswarnings("all") - The following packages are correct but may show as unresolved in IDE
resilience4j.retry.instances.geminiApiRetry.retryExceptions=java.io.IOException,java.net.SocketTimeoutException,org.springframework.web.client.ResourceAccessException

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,ratelimiters,retries
management.endpoint.health.show-details=always
management.health.ratelimiters.enabled=true
management.health.retries.enabled=true
