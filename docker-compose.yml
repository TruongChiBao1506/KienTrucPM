version: "3.8"
services:
  # =================== #
  # ðŸ“Œ KAFKA SERVICES  #
  # =================== #
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # ======================= #
  # ðŸ“Œ DATABASES           #
  # ======================= #
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_CHARACTER_SET_SERVER: utf8mb4
      MARIADB_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mariadb-init:/docker-entrypoint-initdb.d

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================= #
  # ðŸ“Œ MICROSERVICES       #
  # ======================= #
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/glasses_db_account
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      eureka-server:
        condition: service_healthy
      mariadb:
        condition: service_started
      redis:
        condition: service_started

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/glasses_db_user
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      eureka-server:
        condition: service_healthy
      mariadb:
        condition: service_started

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/glasses_db_products
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      eureka-server:
        condition: service_healthy
      mariadb:
        condition: service_started

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/glasses_db_orders?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      eureka-server:
        condition: service_healthy
      mariadb:
        condition: service_started

  cart-service:
    build: ./cart-service
    container_name: cart-service
    ports:
      - "8088:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    depends_on:
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_started

  review-service:
    build: ./review-service
    container_name: review-service
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/glasses_db_reviews
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      eureka-server:
        condition: service_healthy
      mariadb:
        condition: service_started

  email-service:
    build: ./email-service
    container_name: email-service
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_MAIL_HOST=smtp.gmail.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=sendingemaileventhub@gmail.com
      - SPRING_MAIL_PASSWORD=ajutdmaklhqsfsrp
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
    depends_on:
      eureka-server:
        condition: service_healthy

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/glasses_db_notifications
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      eureka-server:
        condition: service_healthy
      mariadb:
        condition: service_started

  chatbot-service:
    build: ./chatbot-service
    container_name: chatbot-service
    ports:
      - "8089:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - GEMINI_API_KEY=
      - RESILIENCE4J_RATELIMITER_INSTANCES_CHATENDPOINT_LIMITFORPERIOD=15
      - RESILIENCE4J_RATELIMITER_INSTANCES_CHATENDPOINT_LIMITREFRESHPERIOD=60s
      - RESILIENCE4J_RATELIMITER_INSTANCES_CHATENDPOINT_TIMEOUTDURATION=0
      - RESILIENCE4J_RETRY_INSTANCES_GEMINIAPIRETRY_MAXATTEMPTS=3
      - RESILIENCE4J_RETRY_INSTANCES_GEMINIAPIRETRY_WAITDURATION=500ms
      - RESILIENCE4J_RETRY_INSTANCES_GEMINIAPIRETRY_RETRYEXCEPTIONS=java.io.IOException
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/chatbotdb?authSource=admin
    depends_on:
      eureka-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy

volumes:
  mongodb_data:
    driver: local
  mariadb_data:
    driver: local
